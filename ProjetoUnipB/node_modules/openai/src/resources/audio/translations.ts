// File generated from our OpenAPI spec by Stainless.

<<<<<<< HEAD
import * as Core from "../../core";
import { APIResource } from "../../resource";
import * as TranslationsAPI from "./translations";
import { type Uploadable, multipartFormRequestOptions } from "../../core";
=======
import * as Core from '../../core';
import { APIResource } from '../../resource';
import * as API from './index';
import { type Uploadable, multipartFormRequestOptions } from '../../core';
>>>>>>> 011312d5750e409ae680354d5bcc999303d0b70a

export class Translations extends APIResource {
  /**
   * Translates audio into English.
   */
  create(body: TranslationCreateParams, options?: Core.RequestOptions): Core.APIPromise<Translation> {
<<<<<<< HEAD
    return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));
=======
    return this.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));
>>>>>>> 011312d5750e409ae680354d5bcc999303d0b70a
  }
}

export interface Translation {
  text: string;
}

export interface TranslationCreateParams {
  /**
   * The audio file object (not file name) translate, in one of these formats: flac,
   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
   */
  file: Uploadable;

  /**
   * ID of the model to use. Only `whisper-1` is currently available.
   */
  model: (string & {}) | 'whisper-1';

  /**
   * An optional text to guide the model's style or continue a previous audio
<<<<<<< HEAD
   * segment. The
   * [prompt](https://platform.openai.com/docs/guides/speech-to-text/prompting)
   * should be in English.
=======
   * segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in
   * English.
>>>>>>> 011312d5750e409ae680354d5bcc999303d0b70a
   */
  prompt?: string;

  /**
<<<<<<< HEAD
   * The format of the transcript output, in one of these options: `json`, `text`,
   * `srt`, `verbose_json`, or `vtt`.
=======
   * The format of the transcript output, in one of these options: json, text, srt,
   * verbose_json, or vtt.
>>>>>>> 011312d5750e409ae680354d5bcc999303d0b70a
   */
  response_format?: string;

  /**
   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the
   * output more random, while lower values like 0.2 will make it more focused and
   * deterministic. If set to 0, the model will use
   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to
   * automatically increase the temperature until certain thresholds are hit.
   */
  temperature?: number;
}

export namespace Translations {
<<<<<<< HEAD
  export import Translation = TranslationsAPI.Translation;
  export import TranslationCreateParams = TranslationsAPI.TranslationCreateParams;
=======
  export import Translation = API.Translation;
  export import TranslationCreateParams = API.TranslationCreateParams;
>>>>>>> 011312d5750e409ae680354d5bcc999303d0b70a
}
